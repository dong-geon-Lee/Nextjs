{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dong-geon/Desktop/memo/udemy/nextJS/nextjs/06-project-starting-project/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyMTA4MTVfMTMy%2FMDAxNjI5MDMzMzE3Nzg3.PWT90FU0nVihRhbyX6FZixBsWgKqJr1OTKlBHohks30g.UWQiztYHEYSjx84RcJKVjV4OvsMpiaB39DrXHPK_Ab8g.JPEG.kitten825%2F1629032666875.jpg&type=sc960_832\",\n    title: \"First Meetup\",\n    address: \"Some Street 5, Some Seoul\",\n    description: \"This is a first Meet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async context => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://nextexample:5JNkYwgvNxMc2gGo@youtubeclone.o9qxi.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\"); // const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      selectedMeetup\n    }\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/dong-geon/Desktop/memo/udemy/nextJS/nextjs/06-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","context","meetupId","params","client","connect","db","meetupsCollection","collection","selectedMeetup","findOne","_id","close","fallback","paths","meetups","map","meetup","toString","getStaticProps","props"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,+PADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,2BAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAeD,QAAhC;AAEA,QAAME,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,+GADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CAT+C,CAW/C;;AAEA,QAAMC,cAAc,GAAG,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAAEC,IAAAA,GAAG,EAAET;AAAP,GAA1B,CAA7B;AAEAE,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAaC,MAAD,KAAa;AAC9Bd,MAAAA,MAAM,EAAE;AAAED,QAAAA,QAAQ,EAAEe,MAAM,CAACN,GAAP,CAAWO,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD,CAvBM;AAyBP,OAAO,MAAMC,cAAc,GAAG,MAAOlB,OAAP,IAAmB;AAC/C,QAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAeD,QAAhC;AAEA,SAAO;AACLkB,IAAAA,KAAK,EAAE;AACLX,MAAAA;AADK;AADF,GAAP;AAKD,CARM;AAUP,eAAeV,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = () => {\n  return (\n    <MeetupDetail\n      image=\"https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyMTA4MTVfMTMy%2FMDAxNjI5MDMzMzE3Nzg3.PWT90FU0nVihRhbyX6FZixBsWgKqJr1OTKlBHohks30g.UWQiztYHEYSjx84RcJKVjV4OvsMpiaB39DrXHPK_Ab8g.JPEG.kitten825%2F1629032666875.jpg&type=sc960_832\"\n      title=\"First Meetup\"\n      address=\"Some Street 5, Some Seoul\"\n      description=\"This is a first Meet\"\n    ></MeetupDetail>\n  );\n};\n\nexport const getStaticPaths = async (context) => {\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://nextexample:5JNkYwgvNxMc2gGo@youtubeclone.o9qxi.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  // const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n};\n\nexport const getStaticProps = async (context) => {\n  const meetupId = context.params.meetupId;\n\n  return {\n    props: {\n      selectedMeetup,\n    },\n  };\n};\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}